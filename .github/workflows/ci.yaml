name: Rust CI/CD with Docker

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    paths:
      - 'service1/**'
      - 'service2/**'

jobs:
  test-service1:
    name: Test Service 1
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Run Tests for Service 1
        working-directory: ./service1
        run: cargo test

  test-service2:
    name: Test Service 2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Run Tests for Service 2
        working-directory: ./service2
        run: cargo test

  lint-service1:
    name: Lint Service 1
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Run Linting for Service 1
        working-directory: ./service1
        run: cargo clippy -- -D warnings

  lint-service2:
    name: Lint Service 2
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Run Linting for Service 2
        working-directory: ./service2
        run: cargo clippy -- -D warnings

  build-service1:
    name: Build Docker Image for Service 1
    runs-on: ubuntu-latest
    needs: [test-service1, lint-service1]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Docker Image for Service 1
        working-directory: ./service1
        run: docker build -t docker.pkg.github.com/${{ github.repository }}/service1:latest -f Dockerfile .
        env:
          DOCKER_BUILDKIT: 1

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login docker.pkg.github.com -u ${{ github.repository_owner }} --password-stdin

      - name: Push Docker Image
        run: docker push docker.pkg.github.com/${{ github.repository }}/service1:latest

  build-service2:
    name: Build Docker Image for Service 2
    runs-on: ubuntu-latest
    needs: [test-service2, lint-service2]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Build Docker Image for Service 2
        working-directory: ./service2
        run: docker build -t docker.pkg.github.com/${{ github.repository }}/service2:latest -f Dockerfile .
        env:
          DOCKER_BUILDKIT: 1

      - name: Log in to GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login docker.pkg.github.com -u ${{ github.repository_owner }} --password-stdin

      - name: Push Docker Image
        run: docker push docker.pkg.github.com/${{ github.repository }}/service2:latest
